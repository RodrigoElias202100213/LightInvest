// <auto-generated />
using System;
using LightInvest.Models.BD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LightInvest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LightInvest.Models.Artigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoCurta")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Artigos");
                });

            modelBuilder.Entity("LightInvest.Models.DadosInstalacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<int>("Dificuldade")
                        .HasColumnType("int");

                    b.Property<decimal>("Inclinacao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ModeloPainelId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPaineis")
                        .HasColumnType("int");

                    b.Property<int>("PotenciaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoInstalacao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("ModeloPainelId");

                    b.HasIndex("PotenciaId");

                    b.ToTable("DadosInstalacao");
                });

            modelBuilder.Entity("LightInvest.Models.EnergyConsumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string>("ConsumoDiaSemana")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ConsumoFimSemana")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ConsumoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MediaAnual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MediaFimSemana")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MediaSemana")
                        .HasColumnType("decimal(18,2)");

                    b.PrimitiveCollection<string>("MesesOcupacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnergyConsumptions");
                });

            modelBuilder.Entity("LightInvest.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("LightInvest.Models.RoiCalculator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConsumoEnergeticoMedio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConsumoEnergeticoRede")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CustoInstalacao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CustoManutencaoAnual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataCalculado")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ROI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RetornoEconomia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ROICalculators");
                });

            modelBuilder.Entity("LightInvest.Models.Tarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrecoKWh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tarifas");
                });

            modelBuilder.Entity("LightInvest.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LightInvest.Models.b.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Albufeira"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Almada"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Amadora"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Aveiro"
                        },
                        new
                        {
                            Id = 30,
                            Nome = "Barreiro"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Barcelos"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Beja"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Braga"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Bragança"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Caldas da Rainha"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Cascais"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Coimbra"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Évora"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Faro"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Figueira da Foz"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Funchal"
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Guarda"
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Guimarães"
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Leiria"
                        },
                        new
                        {
                            Id = 19,
                            Nome = "Lisboa"
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Matosinhos"
                        },
                        new
                        {
                            Id = 21,
                            Nome = "Montijo"
                        },
                        new
                        {
                            Id = 22,
                            Nome = "Odivelas"
                        },
                        new
                        {
                            Id = 23,
                            Nome = "Oeiras"
                        },
                        new
                        {
                            Id = 24,
                            Nome = "Portalegre"
                        },
                        new
                        {
                            Id = 25,
                            Nome = "Portimão"
                        },
                        new
                        {
                            Id = 26,
                            Nome = "Porto"
                        },
                        new
                        {
                            Id = 27,
                            Nome = "Póvoa de Varzim"
                        },
                        new
                        {
                            Id = 28,
                            Nome = "Santarem"
                        },
                        new
                        {
                            Id = 29,
                            Nome = "Setúbal"
                        },
                        new
                        {
                            Id = 31,
                            Nome = "Sintra"
                        },
                        new
                        {
                            Id = 32,
                            Nome = "Tomar"
                        },
                        new
                        {
                            Id = 33,
                            Nome = "Torres Vedras"
                        },
                        new
                        {
                            Id = 34,
                            Nome = "Viana do castelo"
                        },
                        new
                        {
                            Id = 35,
                            Nome = "Vila do Conde"
                        },
                        new
                        {
                            Id = 36,
                            Nome = "Vila Nova de Gaia"
                        },
                        new
                        {
                            Id = 37,
                            Nome = "Viseu"
                        });
                });

            modelBuilder.Entity("LightInvest.Models.b.ModeloPainelSolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModeloNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ModelosDePaineisSolares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModeloNome = "Aiko - Comet 2U",
                            Preco = 1250.00m
                        },
                        new
                        {
                            Id = 2,
                            ModeloNome = "Maxeon 7",
                            Preco = 1320.00m
                        },
                        new
                        {
                            Id = 3,
                            ModeloNome = "Longi - HI-MO X6",
                            Preco = 1280.00m
                        },
                        new
                        {
                            Id = 4,
                            ModeloNome = "Huasun - Himalaya",
                            Preco = 1300.00m
                        },
                        new
                        {
                            Id = 5,
                            ModeloNome = "TW Solar",
                            Preco = 1230.00m
                        },
                        new
                        {
                            Id = 6,
                            ModeloNome = "JA Solar DeepBlue 4.0 Pro",
                            Preco = 1270.00m
                        },
                        new
                        {
                            Id = 7,
                            ModeloNome = "Astroenergy - Astro N5",
                            Preco = 1260.00m
                        },
                        new
                        {
                            Id = 8,
                            ModeloNome = "Grand Sunergy",
                            Preco = 1240.00m
                        },
                        new
                        {
                            Id = 9,
                            ModeloNome = "DMEGC - Infinity RT",
                            Preco = 1290.00m
                        },
                        new
                        {
                            Id = 10,
                            ModeloNome = "Spic",
                            Preco = 910.00m
                        });
                });

            modelBuilder.Entity("LightInvest.Models.b.PotenciaPainelSolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ModeloPainelId")
                        .HasColumnType("int");

                    b.Property<decimal>("Potencia")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ModeloPainelId");

                    b.ToTable("PotenciasDePaineisSolares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModeloPainelId = 1,
                            Potencia = 670m
                        },
                        new
                        {
                            Id = 2,
                            ModeloPainelId = 1,
                            Potencia = 680m
                        },
                        new
                        {
                            Id = 3,
                            ModeloPainelId = 1,
                            Potencia = 690m
                        },
                        new
                        {
                            Id = 4,
                            ModeloPainelId = 1,
                            Potencia = 700m
                        },
                        new
                        {
                            Id = 5,
                            ModeloPainelId = 2,
                            Potencia = 445m
                        },
                        new
                        {
                            Id = 6,
                            ModeloPainelId = 2,
                            Potencia = 455m
                        },
                        new
                        {
                            Id = 7,
                            ModeloPainelId = 2,
                            Potencia = 465m
                        },
                        new
                        {
                            Id = 8,
                            ModeloPainelId = 2,
                            Potencia = 475m
                        },
                        new
                        {
                            Id = 9,
                            ModeloPainelId = 3,
                            Potencia = 600m
                        },
                        new
                        {
                            Id = 10,
                            ModeloPainelId = 3,
                            Potencia = 610m
                        },
                        new
                        {
                            Id = 11,
                            ModeloPainelId = 3,
                            Potencia = 620m
                        },
                        new
                        {
                            Id = 12,
                            ModeloPainelId = 3,
                            Potencia = 630m
                        },
                        new
                        {
                            Id = 13,
                            ModeloPainelId = 4,
                            Potencia = 720m
                        },
                        new
                        {
                            Id = 14,
                            ModeloPainelId = 4,
                            Potencia = 730m
                        },
                        new
                        {
                            Id = 15,
                            ModeloPainelId = 4,
                            Potencia = 740m
                        },
                        new
                        {
                            Id = 16,
                            ModeloPainelId = 4,
                            Potencia = 750m
                        },
                        new
                        {
                            Id = 17,
                            ModeloPainelId = 5,
                            Potencia = 715m
                        },
                        new
                        {
                            Id = 18,
                            ModeloPainelId = 5,
                            Potencia = 725m
                        },
                        new
                        {
                            Id = 19,
                            ModeloPainelId = 5,
                            Potencia = 735m
                        },
                        new
                        {
                            Id = 20,
                            ModeloPainelId = 5,
                            Potencia = 745m
                        },
                        new
                        {
                            Id = 21,
                            ModeloPainelId = 5,
                            Potencia = 590m
                        },
                        new
                        {
                            Id = 22,
                            ModeloPainelId = 5,
                            Potencia = 600m
                        },
                        new
                        {
                            Id = 23,
                            ModeloPainelId = 5,
                            Potencia = 610m
                        },
                        new
                        {
                            Id = 24,
                            ModeloPainelId = 5,
                            Potencia = 620m
                        },
                        new
                        {
                            Id = 25,
                            ModeloPainelId = 6,
                            Potencia = 595m
                        },
                        new
                        {
                            Id = 26,
                            ModeloPainelId = 6,
                            Potencia = 605m
                        },
                        new
                        {
                            Id = 27,
                            ModeloPainelId = 6,
                            Potencia = 615m
                        },
                        new
                        {
                            Id = 28,
                            ModeloPainelId = 6,
                            Potencia = 625m
                        },
                        new
                        {
                            Id = 29,
                            ModeloPainelId = 7,
                            Potencia = 640m
                        },
                        new
                        {
                            Id = 30,
                            ModeloPainelId = 7,
                            Potencia = 650m
                        },
                        new
                        {
                            Id = 31,
                            ModeloPainelId = 7,
                            Potencia = 660m
                        },
                        new
                        {
                            Id = 32,
                            ModeloPainelId = 7,
                            Potencia = 670m
                        },
                        new
                        {
                            Id = 33,
                            ModeloPainelId = 8,
                            Potencia = 710m
                        },
                        new
                        {
                            Id = 34,
                            ModeloPainelId = 8,
                            Potencia = 720m
                        },
                        new
                        {
                            Id = 35,
                            ModeloPainelId = 8,
                            Potencia = 730m
                        },
                        new
                        {
                            Id = 36,
                            ModeloPainelId = 8,
                            Potencia = 740m
                        },
                        new
                        {
                            Id = 37,
                            ModeloPainelId = 9,
                            Potencia = 615m
                        },
                        new
                        {
                            Id = 38,
                            ModeloPainelId = 9,
                            Potencia = 625m
                        },
                        new
                        {
                            Id = 39,
                            ModeloPainelId = 9,
                            Potencia = 635m
                        },
                        new
                        {
                            Id = 40,
                            ModeloPainelId = 9,
                            Potencia = 645m
                        },
                        new
                        {
                            Id = 41,
                            ModeloPainelId = 10,
                            Potencia = 410m
                        },
                        new
                        {
                            Id = 42,
                            ModeloPainelId = 10,
                            Potencia = 420m
                        },
                        new
                        {
                            Id = 43,
                            ModeloPainelId = 10,
                            Potencia = 430m
                        },
                        new
                        {
                            Id = 44,
                            ModeloPainelId = 10,
                            Potencia = 440m
                        });
                });

            modelBuilder.Entity("LightInvest.Models.DadosInstalacao", b =>
                {
                    b.HasOne("LightInvest.Models.b.Cidade", "Cidade")
                        .WithMany("DadosInstalacoes")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LightInvest.Models.b.ModeloPainelSolar", "ModeloPainel")
                        .WithMany()
                        .HasForeignKey("ModeloPainelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LightInvest.Models.b.PotenciaPainelSolar", "Potencia")
                        .WithMany()
                        .HasForeignKey("PotenciaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("ModeloPainel");

                    b.Navigation("Potencia");
                });

            modelBuilder.Entity("LightInvest.Models.b.PotenciaPainelSolar", b =>
                {
                    b.HasOne("LightInvest.Models.b.ModeloPainelSolar", "ModeloPainelSolar")
                        .WithMany("Potencias")
                        .HasForeignKey("ModeloPainelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ModeloPainelSolar");
                });

            modelBuilder.Entity("LightInvest.Models.b.Cidade", b =>
                {
                    b.Navigation("DadosInstalacoes");
                });

            modelBuilder.Entity("LightInvest.Models.b.ModeloPainelSolar", b =>
                {
                    b.Navigation("Potencias");
                });
#pragma warning restore 612, 618
        }
    }
}
