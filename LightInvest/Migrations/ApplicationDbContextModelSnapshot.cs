// <auto-generated />
using LightInvest.Data;
using LightInvest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LightInvest.Migrations
{
	[DbContext(typeof(ApplicationDbContext))]
	partial class ApplicationDbContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
			modelBuilder
				.HasAnnotation("ProductVersion", "9.0.1")
				.HasAnnotation("Relational:MaxIdentifierLength", 128);

			SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

			modelBuilder.Entity("LightInvest.Models.User", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

				b.Property<string>("Email")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Name")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.Property<string>("Password")
					.IsRequired()
					.HasColumnType("nvarchar(max)");

				b.HasKey("Id");

				b.ToTable("Users");
			});

			modelBuilder.Entity("LightInvest.Models.ROICalculator", b =>
			{
				b.Property<int>("Id")
					.ValueGeneratedOnAdd()
					.HasColumnType("int");

				SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

				b.Property<int>("UserId")
					.HasColumnType("int");

				b.Property<decimal>("CustoInstalacao")
					.HasColumnType("decimal(18,2)");

				b.Property<decimal>("CustoManutencaoAnual")
					.HasColumnType("decimal(18,2)");

				b.Property<decimal>("ConsumoEnergeticoMedio")
					.HasColumnType("decimal(18,2)");

				b.Property<decimal>("ConsumoEnergeticoRede")
					.HasColumnType("decimal(18,2)");

				b.Property<decimal>("RetornoEconomia")
					.HasColumnType("decimal(18,2)");

				b.Property<decimal>("ROI")
					.HasColumnType("decimal(18,2)");

				b.Property<DateTime>("DataCalculado")
					.HasColumnType("datetime");

				b.HasKey("Id");

				b.HasIndex("UserId");

				b.ToTable("ROICalculators");
			});

			modelBuilder.Entity("LightInvest.Models.ROICalculator", b =>
			{
				b.HasOne("LightInvest.Models.User", "User")
					.WithMany("ROICalculators")
					.HasForeignKey("UserId")
					.OnDelete(DeleteBehavior.Cascade)
					.IsRequired();
			});
		}
	}
}
